rules:
  - id: snake-case-unexported-vars
    patterns:
      - pattern: "var $NAME = ..."
      - metavariable-regex: 
          metavariable: "$NAME"
          regex: "^[a-z][a-z0-9]*(_[a-z0-9]+)*$"
      - pattern-not: "var $_ = ..."
      - pattern-not: "var $NAME$_ = ..."
    message: "Variables that are unexported must be snake_case (e.g. my_variable)"
    languages: [go]
    severity: ERROR
    
  - id: pascal-case-exported-vars
    patterns:
      - pattern: "var $NAME = ..."
      - metavariable-regex:
          metavariable: "$NAME"
          regex: "^[A-Z][a-zA-Z0-9]*$"
    message: "Variables that are exported must be PascalCase (e.g. MyVariable)"
    languages: [go]
    severity: ERROR

  - id: pascal-case-exported-functions
    patterns:
      - patterns:
        - pattern-either:
          - pattern: |
              func $FNNAME($...ARGS) $...RETURNS {
                $...BODY
              }
          - pattern: |
              func $FNNAME($...ARGS) $...RETURNS
        - metavariable-regex:
            metavariable: "FNNAME"
            regex: '^[a-z].*$'
        - pattern-not-inside: |
            type $TYPE interface {
              ...
            }
    message: "Functions that are exported must be PascalCase (e.g. MyFunction)"
    languages: [go]
    severity: ERROR

  - id: camel-case-unexported-functions
    patterns:
      - pattern-either:
        - pattern: |
            func $FNNAME($...ARGS) $...RETURNS {
              $...BODY
            }
        - pattern: |
            func $FNNAME($...ARGS) $...RETURNS
      - metavariable-regex:
          metavariable: "$FNNAME"
          regex: '^[A-Z].*$'
      - pattern-inside: |
          package main
    message: "Functions that are unexported must be camelCase (e.g. myFunction)"
    languages: [go]
    severity: ERROR

  - id: exported-function-naming-invalid
    patterns:
      - pattern-either:
        - pattern: |
            func $FNNAME($...ARGS) $...RETURNS {
              $...BODY
            }
        - pattern: |
            func $FNNAME($...ARGS) $...RETURNS
      - metavariable-regex:
          metavariable: "$FNNAME"
          regex: '^[A-Z][a-zA-Z0-9]*[_-].*$|^[A-Z][a-zA-Z0-9]*[A-Z]{2,}.*$'
    message: "The following function '$FNNAME' should be PascalCase"
    languages: [go]
    severity: ERROR

  - id: unexported-function-naming-invalid
    patterns:
      - pattern-either:
        - pattern: |
            func $FNNAME($...ARGS) $...RETURNS {
              $...BODY
            }
        - pattern: |
            func $FNNAME($...ARGS) $...RETURNS
      - metavariable-regex:
          metavariable: "$FNNAME"
          regex: '[a-z][a-zA-Z0-9]*[_-].*$|.*[_-].$'
    message: "The following function '$FNNAME' should be camelCase"
    languages: [go]
    severity: ERROR

  - id: kebab-file-names
    pattern-regex: '(?<!test)\.go$'
    paths:
      include: [".*"]
      exclude: ['[a-z0-9-]+\.go']
    message: "Filenames must be kebab-case (e.g. my-file.go)"
    languages: [go]
    severity: ERROR
